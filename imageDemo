#!/bin/bash

dir=$(dirname "$0")
source $dir/demoscript
PATH=$(readlink -f $dir):$PATH

(
echo
)&>/dev/null

set -e

cd $(readlink -f $dir/../myapp)

doit docker create ubuntu
ID=$(cat out) ; ID=${ID:0:3}
doit docker cp myapp $ID:/myapp
doit docker commit -c \"entrypoint /myapp\" $ID myapp

background docker run myapp
sleep 1
echo
IP=$(docker inspect --format \"{{.NetworkSettings.Networks.bridge.IPAddress}}\" $(docker ps -aq -n=1))
sleep 1
doit curl -s $IP
docker rm -f $(docker ps -aq -n=1)

doit docker run -d -ti -p 9999:80 myapp
ID=$(cat out) ; ID=${ID:0:3}
doit curl -s localhost:9999
doit --ignorerc docker rm $ID
doit docker rm -f $ID

doit cat Dockerfile

doit docker build -t myapp .

doit docker run -tidP myapp
ID=$(cat out) ; ID=${ID:0:3}
doit docker ps
doit curl -s localhost:$(docker port $ID 80 | sed "s/.*://")
doit docker rm -f $ID

doit regStart

doit docker build -t docker:5000/myapp:1.0 .
doit docker tag myapp docker:5000/myapp:1.0

doit docker push docker:5000/myapp:1.0
comment just to make sure the new image works
doit docker run -tidP docker:5000/myapp:1.0
ID=$(cat out) ; ID=${ID:0:3}
sleep 1
doit curl -s localhost:$(docker port $ID 80 | sed "s/.*://")
doit docker rm -f $ID
doit docker pull docker:5000/myapp:1.0

doit docker images \| grep myapp
doit cat Dockerfile2
doit docker build -f Dockerfile2 -t docker:5000/myapp:1.0 .
doit docker push docker:5000/myapp:1.0
doit docker images \| grep myapp

comment just to make sure the new image works
doit docker run -tidP docker:5000/myapp:1.0
ID=$(cat out) ; ID=${ID:0:3}
sleep 1
doit curl -s localhost:$(docker port $ID 80 | sed "s/.*://")
doit docker rm -f $ID
