#!/bin/bash

dir=$(dirname "$0")
source $dir/demoscript
PATH=$(readlink -f $dir):$PATH

(
docker service rm $(docker service ls -q)
docker rm -f node3
)&>/dev/null

node1IP=$(docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" node1)
node2IP=$(docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" node2)

set -e

comment Deploy v1.0 of \"myapp\" as a service
doit docker service create --name myapp -p 80:80 docker:5000/myapp:1.0

comment Check to see its status
doit docker service ls
echo -e $bold"Waiting for it to start...\\n"$normal
while !(docker service ls|grep "1/1"&>/dev/null);do sleep 1;done

comment Now verify that we can hit it using localhost
doit --ignorerc curl -s 127.0.0.1

comment Now see if we can hit by going to node 1
doit --ignorerc curl -s $node1IP

comment Now see if we can hit by going to node 2
doit --ignorerc curl -s $node2IP

comment Scale the app to have 3 instances
doit docker service scale myapp=3
doit docker service ls
echo -e $bold"Waiting for it to scale...\\n"$normal
while !(docker service ls|grep "3/3");do sleep 1;done
doit docker service ls

comment Start a new node that will not have any instances running on it
doit docker run --privileged -dti --name node3 --hostname node3 ibmdojo/dind --insecure-registry docker:5000
doit docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" node3
node3IP=$(cat out)
dockerIP=$(ifconfig docker0 | grep "inet addr" | sed "s/[^:]*:\([^ ]*\).*/\1/")
docker exec node3 sh -c "echo $dockerIP docker >> /etc/hosts"
doit $(cat node3.cmd)

comment Waiting for node 3 to pick up the networking info
while !(curl -s $node3IP); do sleep 1;done
doit --ignorerc curl -s $node3IP
doit --ignorerc curl -s $node3IP
doit --ignorerc curl -s $node3IP
