#!/bin/bash

dir=$(dirname "$0")
source $dir/demoscript
PATH=$(readlink -f $dir):$PATH

(
docker service rm $(docker service ls -q)
docker exec -ti node1 docker swarm leave
docker exec -ti node2 docker swarm leave
docker swarm leave --force
docker rm -f node1 node2
)&>/dev/null

set -e

comment First, let\'s make sure the registry is running
doit regStart

comment First create our 2 containers/nodes
doit docker run --privileged -dti --name node1 --hostname node1 ibmdojo/dind --insecure-registry docker:5000
comment Inspect the node to get its IP so we can hit directly later
doit docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" node1
node1IP=$(cat out)
dockerIP=$(ifconfig docker0 | grep "inet addr" | sed "s/[^:]*:\([^ ]*\).*/\1/")
docker exec node1 sh -c "echo $dockerIP docker >> /etc/hosts"

doit docker run --privileged -dti --name node2 --hostname node2 ibmdojo/dind --insecure-registry docker:5000
doit docker inspect --format "{{.NetworkSettings.Networks.bridge.IPAddress}}" node2
node2IP=$(cat out)
dockerIP=$(ifconfig docker0 | grep "inet addr" | sed "s/[^:]*:\([^ ]*\).*/\1/")
docker exec node2 sh -c "echo $dockerIP docker >> /etc/hosts"

comment Convert our main engine into a Manager by creating a new swarm cluster
doit docker swarm init
joinIP=$(grep --color=never 2377 out | head -1)
token=$(grep --color=never -e --token out | head -1 | sed "s/\\\\//")

comment Convert each node into a Worker by joining the swarm
doit docker exec -ti node1 docker swarm join $token $joinIP
doit docker exec -ti node2 docker swarm join $token $joinIP
echo docker exec -ti node3 docker swarm join $token $joinIP > node3.cmd

comment Examine our swarm/cluster
doit docker node ls
