# - download the Ubuntu Desktop image - e.g. ubuntu-16.04.1-desktop-amd64.iso
# - create a Vbox VM:
#   - 2 gig memory
#   - 20 gig disk
#   - 2 CPU
#   - attach ISO
#   - Enable copy-n-paste
# - start the VM
# - during install of Ubuntu
#   - select "Download updates while installing Ubuntu"
#   - Erase disk and install Ubuntu
#   - Name: docker
#   - Computer Name: docker
#   - username: user
#   - password: docker
#   - select: log in automatically
#
# Then run the VM:
# - Remove extra icons from the launch bar
# - Add terminal to launch bar
# - Insert the Guest Additions CD, run, eject
# - Go to "Software and updates", "Updates" tab, "Auto check for updates":Never
# - Reboot
# - Run:
#     curl -s https://raw.githubusercontent.com/ibm-dojo/scripts/master/dojoInstall | bash
# - Reboot

# Options for this script:
# UPDATE_SCRIPTS=1 | --update   : refresh the 'scripts' git repo
# UPDATE_OS=1                   : update Ubuntu
# DOCKER_VERSION=...            : Docker version to install
# COMPOSE_VERSION=...           : Docker Compose version to install

(

echo && date

set -ex

user="user"
dockerVersion=${DOCKER_VERSION:-1.13.1}
composeVersion=${COMPOSE_VERSION:-1.11.2}

echo docker | sudo -S ls

# If asked, update our git repo
###############################
if [[ "$FIX" != "" || "$*" == *"--fix"* ]]; then
    if [[ -e script/fix ]]; then
        fix
    fi
    exit 0
fi

if [[ "$UPDATE_SCRIPTS" != "" || "$*" == *"--update"* ]]; then
	cd ~/scripts
	git pull
	cd ..
	UPDATE_SCRIPTS="" \
		DOCKER_VERSION=$dockerVersion \
		COMPOSE_VERSION=$composeVersion \
		dojoInstall --os
	exit 0
fi

# Update OS stuff
#################
if [[ ! -f ~/.updated || "$UPDATE_OS" != "" || "$*" == *"--os"* ]]; then
	export UPDATE_OS="true"
	sudo -S apt-get update
	sudo apt-get -y upgrade
	echo > ~/.updated
fi
sudo apt-get install -y curl

rm -rf Downloads Music Pictures Public Templates Videos Documents
rm -rf examples.desktop

# Install Docker
################
if ! which docker > /dev/null ; then
    sudo curl -fsSL https://get.docker.com/ | sh
    sudo usermod -aG docker $user

	# verify
    sudo docker version
fi

# Install the desired version of Docker
#######################################
tmpVer=`sudo docker version | grep Version | head -1 | sed "s/.*: *\([^ ]*\)/\1/"`

if [[ "$tmpVer" != "$dockerVersion" ]]; then
	dockerDir=$(dirname `which docker`)
	sudo service docker stop
	sudo rm -rf ${dockerDir}/saved.docker
	sudo mkdir ${dockerDir}/saved.docker
	sudo mv ${dockerDir}/docker* ${dockerDir}/saved.docker/
    
    curl -s https://get.docker.com/builds/Linux/x86_64/docker-$dockerVersion.tgz | \
	    sudo tar -C ${dockerDir} --strip-components=1 -xvzf-
    sudo service docker start
fi

# Install Compose
#################
tmpVer=`docker-compose version | grep "compose version" | sed "s/.*version \([^, ]*\).*/\1/"`
if [[ "$tmpVer" != "$composeVersion" ]]; then
	curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /tmp/docker-compose
	sudo mv /tmp/docker-compose /usr/local/bin/docker-compose
	sudo chmod +x /usr/local/bin/docker-compose
fi

# Run the Dojo setup script
#######################################################
sg docker -c bash <<'EOF'

set -ex
pushd $HOME

# Get/refresh some images we'll use during the Dojo
###################################################
docker pull ubuntu:14.04
docker pull registry
docker pull alpine
docker pull tomcat
docker pull nginx
docker pull golang
docker pull ibmdojo/looper
docker pull ibmdojo/tiny
docker pull ibmdojo/httpd
docker pull ibmdojo/dind
docker pull ibmdojo/git
docker pull dockercloud/haproxy
docker pull python:3-alpine
docker pull redis:3-alpine

docker tag ubuntu:14.04 ubuntu
docker tag nginx unknown

# note this needs to be in here since we're using "sg" and the env vars
# from outside are not copied into this env
K8S_VERSION=v1.3.2
# to get the latest version number, use:
# curl -sS https://storage.googleapis.com/kubernetes-release/release/stable.txt
docker pull gcr.io/google_containers/hyperkube-amd64:${K8S_VERSION}

function git(){
  docker run -u 1000:1000 -v /home/user:/tmphome -v $PWD:/wd -w /wd -e HOME=/tmphome ibmdojo/git $*
}

git config --global user.email docker@ibm.com
git config --global user.name docker

# Clone (or update) some repos we'll need
#########################################
for repo in scripts myapp goapp webapp; do
    if [ ! -d $repo ]; then
	    git clone https://github.com/ibm-dojo/$repo.git
    else
	    cd $repo
	    git pull
	    cd ..
    fi
done

popd

# End of our docker setup script
EOF

# Make sure our env is updated
##############################
if ! grep 'set -o vi' ~/.bashrc > /dev/null ; then
	echo 'set -o vi' >> ~/.bashrc
fi

if ! grep "alias git" ~/.bashrc > /dev/null ; then
	echo alias git=\'docker run -ti -u 1000:1000 -v /home/user:/tmphome -v \$PWD:/wd -w /wd -e HOME=/tmphome ibmdojo/git\' >> ~/.bashrc

fi

if ! grep '$HOME/scripts' ~/.bashrc > /dev/null ; then
	echo 'PATH=$PATH:$HOME/scripts' >> ~/.bashrc
fi

if ! grep "the password" ~/.bashrc > /dev/null ; then
	echo "echo If ever prompted, the password is \\'docker\\'" >> ~/.bashrc
fi

rm -rf $HOME/layers
cp -r $HOME/scripts/layers $HOME/

rm -rf $HOME/tmp
mkdir $HOME/tmp

if [[ "$UPDATE_OS" != "" ]]; then
	sudo reboot
fi

) 2>&1 | tee -a $HOME/.dojoInstall.log
